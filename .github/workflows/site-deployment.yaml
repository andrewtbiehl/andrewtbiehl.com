# The following workflow runs upon pushing new commits to the trunk branch
# It builds the site source and then deploys it to GitHub Pages
name: Site Deployment
permissions: {}
"on":
  push:
    branches:
      - main
concurrency: site_deployment
jobs:
  # The following job builds, archives, and uploads the source for the site
  build:
    name: Build
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout project
        uses: actions/checkout@v4.1.7
        with:
          submodules: recursive
      - name: Determine project Rust version
        run: |
          RUST_VERSION=$(
            sed --silent --regexp-extended \
              "s/^channel = \"([0-9\.]+)\"$/\1/p" rust-toolchain.toml
          )
          echo "RUST_VERSION=${RUST_VERSION}" >> ${GITHUB_ENV}
      - name: Install project Rust
        run: |
          rustup install ${{env.RUST_VERSION}}
          rustup default ${{env.RUST_VERSION}}
      - name: Restore project Rust cache
        uses: actions/cache@v4.0.2
        with:
          key: rust-packages-${{hashFiles('**/Gemfile.lock', '**/rust-toolchain.toml')}}
          path: ~/.cargo
      - name: Determine project Ruby version
        run: |
          RUBY_VERSION=$(
            sed --silent --regexp-extended "s/^   ruby ([0-9\.]+).*$/\1/p" Gemfile.lock
          )
          echo "RUBY_VERSION=${RUBY_VERSION}" >> ${GITHUB_ENV}
      - name: Install project Ruby
        uses: ruby/setup-ruby@v1.187.0
        with:
          ruby-version: ${{env.RUBY_VERSION}}
          bundler: Gemfile.lock
          bundler-cache: true
          cache-version: ${{hashFiles('Gemfile.lock', '**/rust-toolchain.toml')}}
      - name: Build site
        run: bundle exec jekyll build
        env:
          JEKYLL_ENV: production
      - name: Archive and upload build
        uses: actions/upload-pages-artifact@v3.0.1
  # The following job deploys the previously built site source to GitHub Pages
  deploy:
    name: Deploy
    runs-on: ubuntu-22.04
    timeout-minutes: 20
    needs: build
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{steps.deploy-site.outputs.page_url}}
    steps:
      - name: Deploy site
        id: deploy-site
        uses: actions/deploy-pages@v4.0.5
